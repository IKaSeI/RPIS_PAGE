// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RMGs.Models;
using System;

namespace RMGs.Migrations
{
    [DbContext(typeof(RMGContext))]
    partial class RMGContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RMGs.Models.BookMarks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OrderId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("BookMarks");
                });

            modelBuilder.Entity("RMGs.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Priece");

                    b.Property<int>("RealEstateId");

                    b.Property<int>("Type");

                    b.Property<int>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("RealEstateId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RMGs.Models.RealEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("RealEstates");
                });

            modelBuilder.Entity("RMGs.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<bool>("Mark");

                    b.Property<string>("NameUser");

                    b.Property<int>("OrderId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("RMGs.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EMail");

                    b.Property<string>("FIO");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RMGs.Models.Order", b =>
                {
                    b.HasOne("RMGs.Models.RealEstate", "RealEstate")
                        .WithMany()
                        .HasForeignKey("RealEstateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RMGs.Models.User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RMGs.Models.RealEstate", b =>
                {
                    b.OwnsOne("RMGs.Stereotypes.Location", "Location", b1 =>
                        {
                            b1.Property<int>("RealEstateId");

                            b1.Property<string>("ApartmentsNumber");

                            b1.Property<string>("City");

                            b1.Property<string>("Country");

                            b1.Property<string>("HouseBlockNumber");

                            b1.Property<string>("HouseNumber");

                            b1.Property<string>("Street");

                            b1.ToTable("RealEstates");

                            b1.HasOne("RMGs.Models.RealEstate")
                                .WithOne("Location")
                                .HasForeignKey("RMGs.Stereotypes.Location", "RealEstateId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("RMGs.Stereotypes.Property", "Property", b1 =>
                        {
                            b1.Property<int>("RealEstateId");

                            b1.Property<string>("AmountOfFloors");

                            b1.Property<string>("AmountOfRooms");

                            b1.Property<string>("Area");

                            b1.Property<string>("Height");

                            b1.ToTable("RealEstates");

                            b1.HasOne("RMGs.Models.RealEstate")
                                .WithOne("Property")
                                .HasForeignKey("RMGs.Stereotypes.Property", "RealEstateId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("RMGs.Models.Review", b =>
                {
                    b.HasOne("RMGs.Models.Order")
                        .WithMany("Comments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
